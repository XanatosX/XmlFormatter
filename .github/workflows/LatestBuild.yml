name: Latest unstable build

on:
  push:
    branches:
      - develop

env:
  DEBUG: false
  REF_CHECKOUT_BRANCH: develop
  RELEASE_NAME: Recent nightly build

jobs:
   createWinFormsBuild:
     name: Create Windows forms build
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Install nuget
         uses: nuget/setup-nuget@v1
       - name: Nuget restore
         run: nuget restore
         shell: powershell
       - name: Setup msbuild
         uses: microsoft/setup-msbuild@v1.0.2
       - name: Build project
         run: | 
           msbuild .\src\XmlFormatter\XmlFormatter.csproj /t:Build /p:Configuration=Release
           msbuild .\src\JsonPlugin\JsonPlugin.csproj /t:Build /p:Configuration=Release
           msbuild .\src\CorePlugin\CorePlugin.csproj /t:Build /p:Configuration=Release
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatter\bin\Release\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: WinFormBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createAvaloniaBuildWindows:
     name: Create Avalonia build for Windows
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Build project
         run: | 
           dotnet publish .\src\XmlFormatterOsIndependent\ -c Release -r win-x64 --self-contained true
           dotnet publish .\src\CorePlugin\ -c Release -r win-x64
           dotnet publish .\src\JsonPlugin\ -c Release -r win-x64
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\win-x64\publish\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\win-x64\publish\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\win-x64\publish\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatterOsIndependent\bin\Release\net6.0\win-x64\publish\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\  
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: AvaloniaWindowsBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createAvaloniaBuildLinux:
     name: Create Avalonia build for Linux
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Build project
         run: | 
           dotnet publish .\src\XmlFormatterOsIndependent\ -c Release -r linux-x64 --self-contained true
           dotnet publish .\src\CorePlugin\ -c Release -r linux-x64
           dotnet publish .\src\JsonPlugin\ -c Release -r linux-x64
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\linux-x64\publish\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\linux-x64\publish\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\linux-x64\publish\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatterOsIndependent\bin\Release\net6.0\linux-x64\publish\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\  
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: AvaloniaLinuxBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createAvaloniaBuildDarwin:
     name: Create Avalonia build for Darwin
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Build project
         run: | 
           dotnet publish .\src\XmlFormatterOsIndependent\ -c Release -r osx-x64 --self-contained true
           dotnet publish .\src\CorePlugin\ -c Release -r osx-x64
           dotnet publish .\src\JsonPlugin\ -c Release -r osx-x64
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\osx-x64\publish\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\osx-x64\publish\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\osx-x64\publish\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatterOsIndependent\bin\Release\net6.0\osx-x64\publish\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\  
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: AvaloniaDarwinBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createWinFormsZip:
     name: Create WinForm zip
     needs: ["createWinFormsBuild"]
     runs-on: ubuntu-latest
     steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: WinFormBuildArtifact
          path: dist
      - name: Prepare Formatter
        run: |
           mkdir dist/upload-artifacts/Plugins
           mv dist/plugins/CorePlugin.dll dist/upload-artifacts/Plugins
      - name: Create zips
        run: |
           cd dist/upload-artifacts
           zip -r LatestDevelopment_WinFormsXmlFormatter.zip .
           cd ../plugins/
           zip -r LatestDevelopment_WinFormsJsonPlugin.zip .
      - name: Move artifact
        run: |
           mkdir upload-artifacts/
           mv dist/upload-artifacts/LatestDevelopment_WinFormsXmlFormatter.zip upload-artifacts/
           mv dist/plugins/LatestDevelopment_WinFormsJsonPlugin.zip upload-artifacts/
      - name: Upload WinForms build artifact
        uses: actions/upload-artifact@v2
        with:
          name: WinFormZipArtifact
          path: |
            upload-artifacts/
   createAvaloniaZipWindows:
     name: Create Avalonia Windows zip
     needs: ["createAvaloniaBuildWindows"]
     runs-on: ubuntu-latest
     steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: AvaloniaWindowsBuildArtifact
          path: dist
      - name: Prepare Formatter
        run: |
           mkdir dist/upload-artifacts/Plugins
           mv dist/plugins/CorePlugin.dll dist/upload-artifacts/Plugins
      - name: Create zips
        run: |
           cd dist/upload-artifacts
           zip -r LatestDevelopment_WindowsAvaloniaXmlFormatter.zip .
           cd ../plugins/
           zip -r LatestDevelopment_WindowsAvaloniaJsonPlugin.zip .
      - name: Move artifact
        run: |
           mkdir upload-artifacts/
           mv dist/upload-artifacts/LatestDevelopment_WindowsAvaloniaXmlFormatter.zip upload-artifacts/
           mv dist/plugins/LatestDevelopment_WindowsAvaloniaJsonPlugin.zip upload-artifacts/
      - name: Upload Windows Avalonia build artifact
        uses: actions/upload-artifact@v2
        with:
          name: WindowsAvaloniaZipArtifact
          path: |
            upload-artifacts/
   createAvaloniaZipLinux:
     name: Create Avalonia Linux zip
     needs: ["createAvaloniaBuildLinux"]
     runs-on: ubuntu-latest
     steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: AvaloniaLinuxBuildArtifact
          path: dist
      - name: Prepare Formatter
        run: |
           mkdir dist/upload-artifacts/Plugins
           mv dist/plugins/CorePlugin.dll dist/upload-artifacts/Plugins
      - name: Create zips
        run: |
           cd dist/upload-artifacts
           zip -r LatestDevelopment_LinuxAvaloniaXmlFormatter.zip .
           cd ../plugins/
           zip -r LatestDevelopment_LinuxAvaloniaJsonPlugin.zip .
      - name: Move artifact
        run: |
           mkdir upload-artifacts/
           mv dist/upload-artifacts/LatestDevelopment_LinuxAvaloniaXmlFormatter.zip upload-artifacts/
           mv dist/plugins/LatestDevelopment_LinuxAvaloniaJsonPlugin.zip upload-artifacts/
      - name: Upload Linux Avalonia build artifact
        uses: actions/upload-artifact@v2
        with:
          name: LinuxAvaloniaZipArtifact
          path: |
            upload-artifacts/
   createAvaloniaZipDarwin:
     name: Create Avalonia Darwin zip
     needs: ["createAvaloniaBuildDarwin"]
     runs-on: ubuntu-latest
     steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: AvaloniaDarwinBuildArtifact
          path: dist
      - name: Prepare Formatter
        run: |
           mkdir dist/upload-artifacts/Plugins
           mv dist/plugins/CorePlugin.dll dist/upload-artifacts/Plugins
      - name: Create zips
        run: |
           cd dist/upload-artifacts
           zip -r LatestDevelopment_DarwinAvaloniaXmlFormatter.zip .
           cd ../plugins/
           zip -r LatestDevelopment_DarwinAvaloniaJsonPlugin.zip .
      - name: Move artifact
        run: |
           mkdir upload-artifacts/
           mv dist/upload-artifacts/LatestDevelopment_DarwinAvaloniaXmlFormatter.zip upload-artifacts/
           mv dist/plugins/LatestDevelopment_DarwinAvaloniaJsonPlugin.zip upload-artifacts/
      - name: Upload Darwin Avalonia build artifact
        uses: actions/upload-artifact@v2
        with:
          name: DarwinAvaloniaZipArtifact
          path: |
            upload-artifacts/
   uploadRelease:
     name: Upload releases
     needs: ["createWinFormsZip", "createAvaloniaZipWindows", "createAvaloniaZipLinux", "createAvaloniaZipDarwin"]
     runs-on: ubuntu-latest
     steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist
      - name: Read folder content
        run: ls -la dist
      - name: Move Artifacts to release folder
        run: |
          mkdir ./release
          mv dist/*/*.zip ./release
          ls ./release
      - name: Create release and upload artifacts
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create Develop-${{ GITHUB.RUN_NUMBER }} \
            --title "${{ env.RELEASE_NAME }} [${{ GITHUB.RUN_NUMBER }}]" --target ${{ env.REF_CHECKOUT_BRANCH }} \
            --generate-notes --prerelease --notes "Recent version of the develop branch, ready for testing" \
            ./release/*.zip
## --discussion-category "Releases"