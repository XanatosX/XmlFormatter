name: Latest unstable build

on:
  push:
    #branches:
      #- develop

jobs:
   createWinFormsBuild:
     name: Create Windows forms build
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Install nuget
         uses: nuget/setup-nuget@v1
       - name: Nuget restore
         run: nuget restore
         shell: powershell
       - name: Setup msbuild
         uses: microsoft/setup-msbuild@v1.0.2
       - name: Build project
         run: | 
           msbuild .\src\XmlFormatter\XmlFormatter.csproj /t:Build /p:Configuration=Release
           msbuild .\src\JsonPlugin\JsonPlugin.csproj /t:Build /p:Configuration=Release
           msbuild .\src\CorePlugin\CorePlugin.csproj /t:Build /p:Configuration=Release
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatter\bin\Release\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: WinFormBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createAvaloniaBuildWindows:
     name: Create Avalonia build for Windows
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Build project
         run: | 
           dotnet publish .\src\XmlFormatterOsIndependent\ -c Release -r win-x64 --self-contained true
           dotnet publish .\src\CorePlugin\ -c Release -r win-x64
           dotnet publish .\src\JsonPlugin\ -c Release -r win-x64
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\win-x64\publish\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\win-x64\publish\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\win-x64\publish\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatterOsIndependent\bin\Release\netcoreapp3.1\win-x64\publish\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\  
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: AvaloniaWindowsBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createAvaloniaBuildLinux:
     name: Create Avalonia build for Linux
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Build project
         run: | 
           dotnet publish .\src\XmlFormatterOsIndependent\ -c Release -r linux-x64 --self-contained true
           dotnet publish .\src\CorePlugin\ -c Release -r linux-x64
           dotnet publish .\src\JsonPlugin\ -c Release -r linux-x64
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\linux-x64\publish\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\linux-x64\publish\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\linux-x64\publish\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatterOsIndependent\bin\Release\netcoreapp3.1\linux-x64\publish\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\  
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: AvaloniaLinuxBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createAvaloniaBuildDarwin:
     name: Create Avalonia build for Darwin
     runs-on: windows-latest
     steps:
       - name: Clone repository
         uses: actions/checkout@v2
       - name: Build project
         run: | 
           dotnet publish .\src\XmlFormatterOsIndependent\ -c Release -r osx-x64 --self-contained true
           dotnet publish .\src\CorePlugin\ -c Release -r osx-x64
           dotnet publish .\src\JsonPlugin\ -c Release -r osx-x64
         shell: powershell
       - name: Move artifact files
         run: |
           mkdir upload-artifacts\
           mkdir plugins\
           mv .\src\CorePlugin\bin\Release\netstandard2.0\osx-x64\publish\CorePlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\osx-x64\publish\JsonPlugin.dll plugins\
           mv .\src\JsonPlugin\bin\Release\netstandard2.0\osx-x64\publish\Newtonsoft.Json.dll plugins\
           mv .\src\XmlFormatterOsIndependent\bin\Release\netcoreapp3.1\osx-x64\publish\** upload-artifacts\
           mv LICENSE upload-artifacts\
           mv README.md upload-artifacts\  
       - name: Upload build artifact
         uses: actions/upload-artifact@v2
         with:
          name: AvaloniaDarwinBuildArtifact
          path: |
            upload-artifacts/
            plugins/
   createWinFormsZip:
     name: Create WinForm zip
     needs: ["createWinFormsBuild"]
     runs-on: ubuntu-latest
     steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: WinFormBuildArtifact
          path: dist
      - name: Prepare Formatter
        run: |
           mkdir dist/upload-artifacts/Plugins
           mv dist/plugins/CorePlugin.dll dist/upload-artifacts/Plugins
      - name: Create zips
        run: |
           cd dist/upload-artifacts
           zip -r LatestDevelopment_WinFormsXmlFormatter.zip .
           cd ../plugins/
           zip -r LatestDevelopment_WinFormsJsonPlugin.zip .
      - name: Move artifact
        run: |
           mkdir upload-artifacts/
           mv dist/upload-artifacts/LatestDevelopment_WinFormsXmlFormatter.zip upload-artifacts/
           mv dist/plugins/LatestDevelopment_WinFormsJsonPlugin.zip upload-artifacts/
      - name: Upload WinForms build artifact
        uses: actions/upload-artifact@v2
        with:
          name: WinFormZipArtifact
          path: |
            upload-artifacts/
             
           

   #build:
   #  if: github.event.pull_request.merged == true
   #  name: Create latest build artifact
   #  runs-on: windows-latest
   #  steps:
   #    - name: Clone repository
   #      uses: actions/checkout@v2
   #      with: 
   #        ref: develop
   #    - name: Install nuget
   #      uses: nuget/setup-nuget@v1
   #    - name: Setup msbuild
   #      uses: microsoft/setup-msbuild@v1.0.2
   #    - name: Build project
   #      run: |
   #        nuget restore
   #        msbuild /t:Build /p:Configuration=Release
   #      shell: powershell
   #    - name: Create artifacts
   #      run: |
   #        mkdir ..\Artifacts
   #        mkdir ..\Artifacts\XmlFormatter\
   #        mkdir ..\Artifacts\JsonPlugin\
   #        mv .\XmlFormatter\bin\Release\** ..\Artifacts\XmlFormatter\
   #        mv LICENSE ..\Artifacts\XmlFormatter\
   #        cd ..\Artifacts\
   #        mv .\XmlFormatter\Plugins\*Json*.dll .\JsonPlugin\
   #        7z a LatestDevelopment_XmlFormatter.zip .\XmlFormatter\**
   #        7z a LatestDevelopment_JsonPlugin.zip .\JsonPlugin\**
   #      shell: powershell
   #    - name: Create Release
   #      id: create_release
   #      uses: actions/create-release@v1
   #      env:
   #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #      with:
   #        tag_name: ${{ github.ref }}-${{ GITHUB.RUN_NUMBER }}
   #        release_name: Latest unstable
   #        body: You cannot update this version from within the application!
   #        draft: false
   #        prerelease: true
   #    - name: Upload XmlFormatter Release Asset
   #      id: upload-application-release-asset 
   #      uses: actions/upload-release-asset@v1
   #      env:
   #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #      with:
   #        upload_url: ${{ steps.create_release.outputs.upload_url }}
   #        asset_path: ..\Artifacts\LatestDevelopment_XmlFormatter.zip
   #        asset_name: LatestDevelopment_XmlFormatter.zip
   #        asset_content_type: application/zip
   #    - name: Upload Json Plugin Release Asset
   #      id: upload-plugin-release-asset 
   #      uses: actions/upload-release-asset@v1
   #      env:
   #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #      with:
   #        upload_url: ${{ steps.create_release.outputs.upload_url }}
   #        asset_path: ..\Artifacts\LatestDevelopment_JsonPlugin.zip
   #        asset_name: LatestDevelopment_JsonPlugin.zip
   #        asset_content_type: application/zip