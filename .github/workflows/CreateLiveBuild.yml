name: Live build

on:
  push:
    tags:
     - '*'

jobs:
   build:
     name: Create build artifact
     runs-on: windows-latest
     steps:
       - name: Clone Repository
         uses: actions/checkout@v2
         with: 
           ref: develop
       - name: Get Current Tag
         run: echo "::set-env name=tag::$(($env:GITHUB_REF -split '/')[-1] -replace ' ','')"
       - name: Install NuGet
         uses: nuget/setup-nuget@v1
       - name: Install msbuild
         uses: microsoft/setup-msbuild@v1.0.0
       - name: Build Project
         run: |
           nuget restore
           msbuild /t:Build /p:Configuration=Release
         shell: powershell
       - name: Create Artifacts
         run: |
           $xmlFormatter = -join($env:tag, "_XmlFormatter.zip")
           $jsonPlugin = -join($env:tag, "_JsonPlugin.zip")
           echo "::set-env name=xmlFormatter::$($xmlFormatter)"
           echo "::set-env name=jsonPlugin::$($JsonPlugin)"
           mkdir ..\Artifacts
           mkdir ..\Artifacts\XmlFormatter\
           mkdir ..\Artifacts\JsonPlugin\
           mv .\XmlFormatter\bin\Release\** ..\Artifacts\XmlFormatter\
           cd ..\Artifacts\
           mv .\XmlFormatter\Plugins\*Json*.dll .\JsonPlugin\
           7z a $xmlFormatter .\XmlFormatter\**
           7z a $jsonPlugin .\JsonPlugin\**
         shell: powershell
       - name: Create Release
         id: create_release
         uses: actions/create-release@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           tag_name: ${{ github.ref }}
           release_name: Release ${{ env.tag }}
           body: Body goes here!
           draft: true
           prerelease: true
       - name: Upload XmlFormatter Release Asset
         id: upload-application-release-asset 
         uses: actions/upload-release-asset@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: ..\Artifacts\${{ env.xmlFormatter }}
           asset_name: ${{ env.xmlFormatter }}
           asset_content_type: application/zip
       - name: Upload JsonPlugin Release Asset
         id: upload-plugin-release-asset 
         uses: actions/upload-release-asset@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: ..\Artifacts\${{ env.jsonPlugin }}
           asset_name: ${{ env.jsonPlugin }}
           asset_content_type: application/zip