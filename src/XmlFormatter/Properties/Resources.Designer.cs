//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XmlFormatter.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XmlFormatter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this option is active the application will ask you before closing..
        /// </summary>
        internal static string Settings_CB_AskBeforeClose_Message {
            get {
                return ResourceManager.GetString("Settings_CB_AskBeforeClose_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask before closing.
        /// </summary>
        internal static string Settings_CB_AskBeforeClose_Title {
            get {
                return ResourceManager.GetString("Settings_CB_AskBeforeClose_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you activate this option the application will search for updates on startup.
        /// </summary>
        internal static string Settings_CB_CheckUpdatesOnStartup_Message {
            get {
                return ResourceManager.GetString("Settings_CB_CheckUpdatesOnStartup_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for updates on startup.
        /// </summary>
        internal static string Settings_CB_CheckUpdatesOnStartup_Title {
            get {
                return ResourceManager.GetString("Settings_CB_CheckUpdatesOnStartup_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting will only be activated after saving and closing the setting window.
        ///Any changes to the configuration will take place after saving and closing the settings window..
        /// </summary>
        internal static string Settings_CB_Hotfolder_Message {
            get {
                return ResourceManager.GetString("Settings_CB_Hotfolder_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotfolder is active.
        /// </summary>
        internal static string Settings_CB_Hotfolder_Title {
            get {
                return ResourceManager.GetString("Settings_CB_Hotfolder_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you tick this box logging will be active after saving the settings.
        ///The logging can be used to track down errors with the hotfolder..
        /// </summary>
        internal static string Settings_CB_LoggingActive_Message {
            get {
                return ResourceManager.GetString("Settings_CB_LoggingActive_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is logging active.
        /// </summary>
        internal static string Settings_CB_LoggingActive_Title {
            get {
                return ResourceManager.GetString("Settings_CB_LoggingActive_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option will change the minimize behavior of the main window
        ///If this is set the application will be minimized to an tray icon instead of the task bar..
        /// </summary>
        internal static string Settings_CB_MinimizeToTray_Message {
            get {
                return ResourceManager.GetString("Settings_CB_MinimizeToTray_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize to tray.
        /// </summary>
        internal static string Settings_CB_MinimizeToTray_Title {
            get {
                return ResourceManager.GetString("Settings_CB_MinimizeToTray_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can choose a strategy for updating this application in the dropdown below..
        /// </summary>
        internal static string Settings_L_UpdateStrategy_Message {
            get {
                return ResourceManager.GetString("Settings_L_UpdateStrategy_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The strategy to use for updating.
        /// </summary>
        internal static string Settings_L_UpdateStrategy_Title {
            get {
                return ResourceManager.GetString("Settings_L_UpdateStrategy_Title", resourceCulture);
            }
        }
    }
}
